
## Overview

Mocksock provides mock connection/request/response handling for WebSockets.



## Usage

    var jsonObj = {
      'test': 'test-val',
      'test2': 'test-val-2'
    };
    var jsonRespObj = {
      'test': 'all good',
      'test2': 'total legit'
    };
    var jsonObj2 = {
      'test44': 'test-val',
      'test22': 'test-val-2'
    };
    var jsonRespObj2 = {
      'test44': 'pass',
      'test22': 'pass'
    };

    var JSONString = JSON.stringify(jsonObj);
    var JSONString2 = JSON.stringify(jsonObj2);
    var JSONStringResp = JSON.stringify(jsonRespObj);
    var JSONStringResp2 = JSON.stringify(jsonRespObj2);

    var ok_server = Mocksock.Server.configure('ws://ok.host', function () {


      //a default 1-to-1 response per message
      this.onmessage(JSONString).respond(JSONStringResp );

      //a many-to-1 response per message with configurable delay
      this.onmessage(JSONString2).respond(JSONStringResp2, {count:20, delay:10} );


    });

    // Replace native window.WebSocket with MockSock.Client
    Mocksock.mock({log:true});

    var socket = new WebSocket('ws://ok.host');
    var response = null;


    socket.onmessage = function (evt) {
      response = evt.data;
    };

    setTimeout(function(){
        socket.send(JSON.stringify(jsonObj2));
   }, 1);


## Build Install

    git clone git@github.com:skawtus/mocksock.git
    bundle install
    
## Build Test

    ruby test/app.rb
    open test/index.html

## Build Release

Change version in ./Jfile and build distribution with

    jbundle
    
##Credit

Forked from the Sockete project.  Thanks mucho for starting WebSocket mocking!

